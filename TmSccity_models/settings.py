"""
Django settings for TmSccity_models project.

Generated by 'django-admin startproject' using Django 1.11.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&vi=%5f!#tx&4eivyh*&qkhrv)jdu416&)7^7y*flp3i+6$fxp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api.apps.ApiConfig',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',
]
from django.middleware.clickjacking import XFrameOptionsMiddleware
ROOT_URLCONF = 'TmSccity_models.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'TmSccity_models.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
CORS_API = "http://localhost:8080"
# redis配置
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://192.168.131.129:6379",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "CONNECTION_POOL_KWARGS": {"max_connections": 100},
            "PASSWORD": "123456",
        }
    }
}

# Redis存储用户购物篮键配置
SHOPPING_CAR_KEY = 'shopping_car_key_{}_{}'
# Redis存储用户结算中心键配置
PAY_KEY = 'pay_key_{}_{}'
# Redis存储用户结算中心通用券键配置
PAYMENT_COUPON_KEY = 'payment_coupon_key_{}'

# ########## REST_FRAMEWORK########
REST_FRAMEWORK = {
    'UNAUTHENTICATED_USER': None,
    'UNAUTHENTICATED_TOKEN': None,
}

# ######### 支付宝支付 ##########
APPID = "2016081500252288"  # 2016082500309412
# 商户私钥路径
MERCHANT_PRIVATE_KEY_PATH = os.path.join(BASE_DIR, "keys", "app_private_2048.txt")
# merchant_private_key_path = os.path.join(BASE_DIR, "keys", "pri")

# 支付宝公钥路径
ALIPAY_PUBLIC_KEY_PATH = os.path.join(BASE_DIR, "keys", "alipay_public_2048.txt")
# alipay_public_key_path = os.path.join(BASE_DIR, "keys", "pub")

# 服务器异步通知页面路径 需http: // 格式的完整路径，不能加?id = 123 这类自定义参数，必须外网可以正常访问
# 发post请求
NOTIFY_URL = "http://47.94.172.250:8804/api/v1/alipay/"

# 页面跳转同步通知页面路径 需http: // 格式的完整路径，不能加?id = 123 这类自定义参数，必须外网可以正常访问
# 发get请求
RETURN_URL = "http://47.94.172.250:8804/api/v1/alipay/"

# 签名方式(当前只支持RSA和RSA2)
SIGN_TYPE = "RSA2"

# 字符编码格式
CHARSET = "utf-8"

# 支付宝网关(如果是线上环境的话, dev 这三个字去掉即可)
GATEWAY_URL_DEV = "https://openapi.alipaydev.com/gateway.do"
GATEWAY_URL = "https://openapi.alipay.com/gateway.do"

# 异步通知参数DOC(支付宝会主动发起POST请求)
# notify_doc = "https://docs.open.alipay.com/270/105902/"

